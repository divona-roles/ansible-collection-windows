# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
- name: User | Create local "Users" group
  ansible.windows.win_group:
    name: Users
    description: Local Users
    state: present

- name: User | Create user directories
  ansible.builtin.file:
    path: C:\Users\{{ user }}\Desktop\{{ item }}
    state: directory
    mode: 0755
  loop: "{{ divona_windows_user_dirs }}"

- name: User | Create XDG directories
  ansible.builtin.file:
    path: C:\Users\{{ user }}\Desktop\{{ item }}
    state: directory
    mode: 0755
  loop: "{{ divona_windows_xdg_dirs }}"

- name: System | Ensure Windows Subsystem for Linux enabled.
  ansible.windows.win_optional_feature:
    name:
      - Microsoft-Windows-Subsystem-Linux
      - VirtualMachinePlatform
    state: present
  register: divona_windows_wsl_status

- name: System | Restart the machine to complete the WSL install.
  ansible.windows.win_reboot:
  when: divona_windows_wsl_status.reboot_required

- name: System | Ensure Linux kernel update package installed.
  chocolatey.chocolatey.win_chocolatey:
    name: wsl2
    ignore_checksums: true
    state: present

- name: System | Ensure WSL2 distribution installed.
  chocolatey.chocolatey.win_chocolatey:
    name: "{{ divona_windows_wsl2_distribution }}"
    ignore_checksums: true
    state: present

- name: System | Check for missing updates.
  ansible.windows.win_updates:
    state: searched

- name: System | Ensure Windows updates installed.
  ansible.windows.win_updates:
    category_names: "{{ divona_windows_update_categories | default(omit) }}"
    reboot: "{{ divona_windows_windows_updates_reboot | default(false) }}"
  register: update_result
  until: update_result.found_update_count == 0

- name: System | Disable telemetry
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\{{ item }}
    name: Debugger
    data: systray.exe
    type: string
  loop:
    - compattelrunner.exe
    - wsqmcons.exe

- name: System | Uninstall OneDrive
  ansible.windows.win_shell: |
    $process = Get-Process onedrive -ErrorAction SilentlyContinue
    if ($null -ne $process) {
      $process | Stop-Process -Force
      Start-Process "$env:SystemRoot\SysWOW64\OneDriveSetup.exe" "/uninstall" -Wait
      Start-Process "$env:SystemRoot\System32\OneDriveSetup.exe" "/uninstall" -Wait
    }
    $true

- name: System | Uninstall built-in apps
  ansible.windows.win_shell: |
    Get-AppxPackage *3dviewer* | Remove-AppxPackage
    Get-AppxPackage *amazon* | Remove-AppxPackage
    Get-AppxPackage *bingnews* | Remove-AppxPackage
    Get-AppxPackage *bingweather* | Remove-AppxPackage
    Get-AppxPackage *clipchamp* | Remove-AppxPackage
    Get-AppxPackage *disney* | Remove-AppxPackage
    Get-AppxPackage *facebook* | Remove-AppxPackage
    Get-AppxPackage *family* | Remove-AppxPackage
    Get-AppxPackage *feedback* | Remove-AppxPackage
    Get-AppxPackage *getstarted* | Remove-AppxPackage # Tips
    Get-AppxPackage *mixedreality* | Remove-AppxPackage
    Get-AppxPackage *mspaint* | Remove-AppxPackage # Paint 3D
    Get-AppxPackage *office* | Remove-AppxPackage
    Get-AppxPackage *onenote* | Remove-AppxPackage
    Get-AppxPackage *quickassist* | Remove-AppxPackage
    Get-AppxPackage *skype* | Remove-AppxPackage
    Get-AppxPackage *solitaire* | Remove-AppxPackage
    Get-AppxPackage *spotify* | Remove-AppxPackage
    Get-AppxPackage *teams* | Remove-AppxPackage
    Get-AppxPackage *tiktok* | Remove-AppxPackage
    Get-AppxPackage *todos* | Remove-AppxPackage # requires account
    Get-AppxPackage *whatsapp* | Remove-AppxPackage
    Get-AppxPackage *windowsmaps* | Remove-AppxPackage
    Get-AppxPackage *zunevideo* | Remove-AppxPackage # Movies & TV
    $true

- name: System | Windows optional features.
  ansible.windows.win_optional_feature:
    name: "{{ windows_feature.key }}"
    state: "{{ 'present' if windows_feature.value else 'absent' }}"
    include_parent: true
  loop: "{{ divona_windows_windows_features | dict2items }}"
  loop_control:
    loop_var: windows_feature
  register: feature_status

- name: System | Reboot if Windows optional feature requires it.
  ansible.windows.win_reboot:
  when: item.reboot_required
  loop: "{{ feature_status.results }}"
